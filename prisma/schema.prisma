// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Example {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Exam {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  type      ExamType
  status    ExamStatus @default(NOT_STARTED)
  startTime DateTime
  endTime   DateTime
  score     Int?

  userID       String         @unique @db.ObjectId
  user         User           @relation(fields: [userID], references: [id])
  ExamQuestion ExamQuestion[]

  @@map("exams")
}

model ExamQuestion {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  order       Int
  isFlagged  Boolean @default(false)
  answerID    String? @db.ObjectId
  userAnswer  Option? @relation(fields: [answerID], references: [id])
  optionOrder Int[]   @default([0, 1, 2, 3, 4])

  examID     String   @unique @db.ObjectId
  exam       Exam     @relation(fields: [examID], references: [id])
  questionID String   @db.ObjectId
  question   Question @relation(fields: [questionID], references: [id])

  @@map("examQuestions")
}

model Question {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  question String
  image    String?
  type     ExamType

  ExamQuestion ExamQuestion[]
  Option       Option[]

  @@map("questions")
}

model Option {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  prompt    String  @unique
  isCorrect Boolean @default(false)

  ExamQuestion ExamQuestion[]
  questionID   String         @db.ObjectId
  question     Question       @relation(fields: [questionID], references: [id])

  @@map("options")
}

model User {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  username     String @unique
  password     String
  role         Role   @default(USER)
  tokenVersion Int    @default(0)

  exam Exam[]

  @@map("users")
}

enum Role {
  USER
  ADMIN
}

enum ExamStatus {
  NOT_STARTED
  STARTED
  SUBMITTED
  GRADED
}

enum ExamType {
  WARM_UP
  PENYISIHAN
}
